services:
  web:
    build: ./frontend
    image: toyrce:frontend
    ports:
      - "5173:3000"
  api:
    build: ./api
    image: toyrce:api
    restart: always
    env_file:
      - ./api/.env
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=8084
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    ports:
      - "8082:8082"
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "lsof", "-ti:8084"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  db:
    image: postgres:latest
    ports:
      - "8084:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quandry
      POSTGRES_USER: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbit1"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq1"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

volumes:
  rabbitmq_data:
